swagger: '2.0'
info:
  description: >-
    This is a sample server Petstore server.  You can find out more about    
    Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,
    #swagger](http://swagger.io/irc/).      For this sample, you can use the api
    key `special-key` to test the authorization     filters.
  version: 1.0.0
  title: Swagger Petstore
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: petstore.swagger.io
basePath: /v2
tags:
  - name: budget
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: cpu
    description: Access to Petstore orders
  - name: ram
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
  - name: storage
  - name: server
schemes:
  - http
paths:
  /budget:
    post:
      tags:
        - budget
      summary: Add a new pet to the store
      description: ''
      operationId: addBudget
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      responses:
        '405':
          description: Invalid input
    put:
      tags:
        - budget
      summary: Update an existing pet
      description: ''
      operationId: updatePet
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
    get:
      tags:
        - budget
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      produces:
        - application/xml
        - application/json
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          type: array
          items:
            type: string
            enum:
              - available
              - pending
              - sold
            default: available
          collectionFormat: multi
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid status value
    delete:
      tags:
        - budget
      summary: Remove budget
      description: ''
      operationId: deleteBudget
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
  /cpu:
    post:
      tags:
        - cpu
      summary: Add a new pet to the store
      description: ''
      operationId: addCpu
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      responses:
        '405':
          description: Invalid input
    put:
      tags:
        - cpu
      summary: Update an existing pet
      description: ''
      operationId: updateCpu
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
    get:
      tags:
        - cpu
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: getCpu
      produces:
        - application/xml
        - application/json
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          type: array
          items:
            type: string
            enum:
              - available
              - pending
              - sold
            default: available
          collectionFormat: multi
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid status value
    delete:
      tags:
        - cpu
      summary: Update an existing pet
      description: ''
      operationId: deleteCpu
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
  /ram:
    post:
      tags:
        - ram
      summary: Add a new pet to the store
      description: ''
      operationId: addRam
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      responses:
        '405':
          description: Invalid input
    put:
      tags:
        - ram
      summary: Update an existing pet
      description: ''
      operationId: updateRam
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
    get:
      tags:
        - ram
      summary: Find Ram
      description: Multiple status values can be provided with comma separated strings
      operationId: getRam
      produces:
        - application/xml
        - application/json
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          type: array
          items:
            type: string
            enum:
              - available
              - pending
              - sold
            default: available
          collectionFormat: multi
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid status value
    delete:
      tags:
        - ram
      summary: Update an existing pet
      description: ''
      operationId: deleteRam
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
  /storage:
    post:
      tags:
        - storage
      summary: Add a new pet to the store
      description: ''
      operationId: addStorage
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      responses:
        '405':
          description: Invalid input
    put:
      tags:
        - storage
      summary: Update an existing pet
      description: ''
      operationId: updateStorage
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
    get:
      tags:
        - storage
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: getStorage
      produces:
        - application/xml
        - application/json
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          type: array
          items:
            type: string
            enum:
              - available
              - pending
              - sold
            default: available
          collectionFormat: multi
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid status value
    delete:
      tags:
        - storage
      summary: Update an existing hard drive
      description: ''
      operationId: deleteStorage
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '405':
          description: Validation exception
  /server:
    post:
      tags:
        - server
      summary: Add a new server
      description: ''
      operationId: addServer
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      responses:
        '405':
          description: Invalid input
